# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
        public_directory: '%kernel.project_dir%/public'
        uploads_directory: '%public_directory%/uploads/images'
services:
    # default configuration for services in *this* file

    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:               # makes $publicPath available to all services
            $publicPath: '%public_directory%'
            $uploadPath: '%uploads_directory%'

    App\Services\FileUploader:
        arguments:
            $uploadPath: '%kernel.project_dir%/public/uploads/images'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Serializer\PatchedDateTimeNormalizer:
        tags: [serializer.normalizer]
    App\Events\JwtSubscriber:
        tags:
           - {name: kernel.event_listener,event: lexik_jwt_authentication.on_jwt_created ,
           method: updateJwtData ,}
    App\Events\JwtSubscriberDecode:
        tags:
            - {name: kernel.event_listener,event: lexik_jwt_authentication.on_jwt_decoded ,
               method: onJWTDecoded ,}
    App\Events\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
    App\Controller\:
        resource: '../src/Controller'
        tags: [controller.service_arguments]
    App\Events\DeserializerListener:
        tags:
           - {name: 'kernel.event_listener',event: 'kernel.request',method: 'onKernelRequest' ,priority: 2}
        decorates: 'api_platform.listener.request.deserialize'
        autoconfigure: false